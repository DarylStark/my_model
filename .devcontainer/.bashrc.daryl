#-------------------------------------------------------------------------------
# Set environment variables
#-------------------------------------------------------------------------------
export PATH="$PATH:~/bin"
export VISUAL=vi
export EDITOR=$VISUAL

# Configure history
export HISTTIMEFORMAT="[%Y-%m-%d %T] :: "
export HISTCONTROL=ignoreboth

# Escape character to reset colors
export Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
export Black="\[\033[0;30m\]"        # Black
export Red="\[\033[0;31m\]"          # Red
export Green="\[\033[0;32m\]"        # Green
export Yellow="\[\033[0;33m\]"       # Yellow
export Blue="\[\033[0;34m\]"         # Blue
export Purple="\[\033[0;35m\]"       # Purple
export Cyan="\[\033[0;36m\]"         # Cyan
export White="\[\033[0;37m\]"        # White

# Bold
export BBlack="\[\033[1;30m\]"       # Black
export BRed="\[\033[1;31m\]"         # Red
export BGreen="\[\033[1;32m\]"       # Green
export BYellow="\[\033[1;33m\]"      # Yellow
export BBlue="\[\033[1;34m\]"        # Blue
export BPurple="\[\033[1;35m\]"      # Purple
export BCyan="\[\033[1;36m\]"        # Cyan
export BWhite="\[\033[1;37m\]"       # White

# Underline
export UBlack="\[\033[4;30m\]"       # Black
export URed="\[\033[4;31m\]"         # Red
export UGreen="\[\033[4;32m\]"       # Green
export UYellow="\[\033[4;33m\]"      # Yellow
export UBlue="\[\033[4;34m\]"        # Blue
export UPurple="\[\033[4;35m\]"      # Purple
export UCyan="\[\033[4;36m\]"        # Cyan
export UWhite="\[\033[4;37m\]"       # White

# Background
export On_Black="\[\033[40m\]"       # Black
export On_Red="\[\033[41m\]"         # Red
export On_Green="\[\033[42m\]"       # Green
export On_Yellow="\[\033[43m\]"      # Yellow
export On_Blue="\[\033[44m\]"        # Blue
export On_Purple="\[\033[45m\]"      # Purple
export On_Cyan="\[\033[46m\]"        # Cyan
export On_White="\[\033[47m\]"       # White

# High Intensty
export IBlack="\[\033[0;90m\]"       # Black
export IRed="\[\033[0;91m\]"         # Red
export IGreen="\[\033[0;92m\]"       # Green
export IYellow="\[\033[0;93m\]"      # Yellow
export IBlue="\[\033[0;94m\]"        # Blue
export IPurple="\[\033[0;95m\]"      # Purple
export ICyan="\[\033[0;96m\]"        # Cyan
export IWhite="\[\033[0;97m\]"       # White

# Bold High Intensty
export BIBlack="\[\033[1;90m\]"      # Black
export BIRed="\[\033[1;91m\]"        # Red
export BIGreen="\[\033[1;92m\]"      # Green
export BIYellow="\[\033[1;93m\]"     # Yellow
export BIBlue="\[\033[1;94m\]"       # Blue
export BIPurple="\[\033[1;95m\]"     # Purple
export BICyan="\[\033[1;96m\]"       # Cyan
export BIWhite="\[\033[1;97m\]"      # White

# High Intensty backgrounds
export On_IBlack="\[\033[0;100m\]"   # Black
export On_IRed="\[\033[0;101m\]"     # Red
export On_IGreen="\[\033[0;102m\]"   # Green
export On_IYellow="\[\033[0;103m\]"  # Yellow
export On_IBlue="\[\033[0;104m\]"    # Blue
export On_IPurple="\[\033[10;95m\]"  # Purple
export On_ICyan="\[\033[0;106m\]"    # Cyan
export On_IWhite="\[\033[0;107m\]"   # White

# Various variables you might want
export Time12h="\T"
export Time12a="\@"
export Time24h="\t"
export Time24a="\A"
export PathShort="\w"
export PathFull="\W"
export NewLine="\n"
export Jobs="\j"

# Promptname
[ -f ~/.promptname ] && export Promptname=$(cat ~/.promptname) || export Promptname=$(hostname | cut -d '.' -f 1 | tr '[:lower:]' '[:upper:]')

# Make sure no PROMPT_COMMAND is set since that ruins my GNU Screen window title
export PROMPT_COMMAND=
#-------------------------------------------------------------------------------
# Global functions
#-------------------------------------------------------------------------------
function get_prompt_name {
    # Check if a variable exists
    if [ "$PROMPTNAME" != "" ]; then
        echo $PROMPTNAME
        return 0
    fi

    # Return the Promptname variable
    echo $Promptname
}

function reset_prompt_name {
    [ -f ~/.promptname ] && export Promptname=$(cat ~/.promptname) || export Promptname=$(hostname | cut -d '.' -f 1 | tr '[:lower:]' '[:upper:]')
}

function set_prompt_with_git {
    source /usr/lib/git-core/git-sh-prompt
    # Get the current user. If it is the `root` user, we display a pound sign,
    # otherwise, we display a dollar sign to indicate a normal user
    prompt="\$"
    if [ "$(id -u)" == "0" ]; then
        prompt="#"
    fi

    # Set prompt
    export PS1=$White'$(get_prompt_name)'\ \-\ $IBlack$Time24h$Color_Off'$(git branch &>/dev/null;\
    if [ $? -eq 0 ]; then \
      echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
      if [ "$?" -eq "0" ]; then \
        # @4 - Clean repository - nothing to commit
        echo "'$Green'"$(__git_ps1 " (%s)"); \
      else \
        # @5 - Changes to working tree
        echo "'$IRed'"$(__git_ps1 " {%s}"); \
      fi) '$BYellow$PathShort$Color_Off$prompt' "; \
    else \
      # @2 - Prompt when not in GIT repo
      echo " '$Yellow$PathShort$Color_Off$prompt' "; \
    fi)'
}

function set_prompt_without_git {
    # Get the current user. If it is the `root` user, we display a pound sign,
    # otherwise, we display a dollar sign to indicate a normal user
    prompt="\$"
    if [ "$(id -u)" == "0" ]; then
        prompt="#"
    fi

    # Set prompt
    export PS1=$White$(get_prompt_name)\ \-\ $IBlack$Time24h$Yellow\ $PathShort$Color_Off$prompt\ 
}
#-------------------------------------------------------------------------------
# Aliasses
#-------------------------------------------------------------------------------
alias ls='ls -h --color'
alias ll='ls -alF'
alias la='ls -l'
#-------------------------------------------------------------------------------
# Run any local .bashrc files
#-------------------------------------------------------------------------------
if [ -f ~/.bashrc.local ]; then
    source ~/.bashrc.local
fi
#-------------------------------------------------------------------------------
# Adjust the prompt
#-------------------------------------------------------------------------------
# Check if git is installed
git_installed=$(git --version > /dev/null 2>&1; echo $?)
if [ "$git_installed" == "0" ]; then
    set_prompt_with_git;
else
    set_prompt_without_git;
fi
#-------------------------------------------------------------------------------
# Done! Show welcome banner
#-------------------------------------------------------------------------------
echo
echo "  Welcome to the Dev Container for ${TITLE}!"
echo
echo "  The source code for the project is in the directory"
echo
echo "        /workspaces/${FOLDERNAME}"
echo
echo "   The dev-environment is set up and you are ready to start programming!"
echo "   We created a Python Virtual Environment for you in the following"
echo "   folder:"
echo
echo "        /workspaces/${FOLDERNAME}/.venv"
echo
echo "    To use this in VScode or Codium, remember to configure the Python"
echo "    interpreter to"
echo
echo "        /workspaces/${FOLDERNAME}/.venv/bin/python"
echo
echo "   That way, you can use all features related to Python, like linting,"
echo "   autoformatting and unit testing."
echo
echo "   To add Python packages to the project you use the following command:"
echo
echo "        poetry add <packagename>"
echo
echo "    Don't forget to check out to a new branch when you're working on"
echo "    features or bugfixes."
echo
echo "    Happy coding!"
echo
#-------------------------------------------------------------------------------
